generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model account {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  lastName  String
  password  String
  roles     RoleEnum[] @default([User])
  clients   client[]
}

model client {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  account_id String   @db.ObjectId
  account    account? @relation(fields: [account_id], references: [id])
  credits    Int
  name       String
  events     event[]
}

model event {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  client_id  String          @db.ObjectId
  client     client          @relation(fields: [client_id], references: [id])
  name       String
  start_on   DateTime
  end_on     DateTime?
  created_on DateTime
  event_type EventTypeEnum[]
  races      races[]
}

model races {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  event_id String  @db.ObjectId
  name     String
  batches  batch[]
  event    event   @relation(fields: [event_id], references: [id])
}

type batch {
  batch_id String    @db.ObjectId
  name     String
  start_on DateTime?
}

enum EventTypeEnum {
  ObstacleCourseRace
  TimeTrial
  Race
  SprintRace
  LaneRace
  Marathon
  Ultra
  Trail
}

enum RoleEnum {
  Admin
  User
}
